{"version":3,"file":"static/js/216.038187dd.chunk.js","mappings":"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","sources":["components/FormElements/Input.js","components/UIElements/Button.js","hooks/form-hook.js","utils/firebase.js","features/Authentication/Auth/Form.js","features/Authentication/Auth/index.js","pages/Login.js","utils/validators.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../utils/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`${props.className || \"button\"} button--${\n          props.size || \"default\"\n        } ${props.inverse && \"button--inverse\"} ${\n          props.danger && \"button--danger\"\n        }`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`${props.className ||'button'} button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.className || 'btn-primary'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      value={props.value}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDZ_-gRX_iUbWTI9ScvofhHth9BXTUiCL4\",\r\n  authDomain: \"help-pets-sos.firebaseapp.com\",\r\n  projectId: \"help-pets-sos\",\r\n  storageBucket: \"help-pets-sos.appspot.com\",\r\n  messagingSenderId: \"499066324391\",\r\n  appId: \"1:499066324391:web:390d3d851c609858352282\",\r\n  measurementId: \"G-C52LKEQFJT\",\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account\"\r\n})\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { VALIDATOR_REQUIRE } from \"../../../utils/validators\";\r\nimport Button from \"../../../components/UIElements/Button\";\r\nimport BootstrapButton from \"react-bootstrap/Button\";\r\nimport Input from \"../../../components/FormElements/Input\";\r\n\r\nexport default function Form(props) {\r\n return (\r\n   <form className=\"AuthForm\" onSubmit={props.authSubmitHandler} id=\"form\">\r\n     <div className=\"AuthFormContent\">\r\n       <h3 className=\"AuthFormTitle\">\r\n         {props.loginMode ? \"Login\" : \"Sign up\"}\r\n       </h3>\r\n       <div className=\"text-center\" style={{ color: \"cornsilk\" }}>\r\n         {props.loginMode ? \"Not registered yet?\" : \"Already have an account ?\"}{\" \"}\r\n         <span\r\n           onClick={props.switchModeHandler}\r\n           type=\"reset\"\r\n           style={{ color: \"#FED550\" }}\r\n         >\r\n           {props.loginMode ? \"Sign up\" : \"Login\"}\r\n         </span>\r\n         {props.loginMode ? (\r\n           \"\"\r\n         ) : (\r\n           <p style={{ fontSize: \"12px\"}}>Password must have 1 uppercase, lowercase and symbol</p>\r\n         )}\r\n       </div>\r\n       {props.inputs &&\r\n         props.inputs.map((input) => (\r\n           <div className=\"form-group mt-3\" key={input}>\r\n             <Input\r\n               id={input}\r\n               key={input}\r\n               type={input}\r\n               className=\"form-control mt-1\"\r\n               placeholder={`Enter ${input}`}\r\n               onInput={props.inputHandler}\r\n               element=\"input\"\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText={`Please enter a valid ${input}`}\r\n               label={`Enter ${input}`}\r\n             />\r\n           </div>\r\n         ))}\r\n\r\n       <p style={{ color: \"red\" }}>{props.err}</p>\r\n       <div className=\"d-grid gap-2 mt-3\">\r\n         <Button\r\n           type=\"submit\"\r\n           disabled={!props.isValid}\r\n           className=\"btn btnPrimary\"\r\n         >\r\n           {props.loginMode ? \"Login\" : \"Sign up\"}\r\n         </Button>\r\n       </div>\r\n       {props.loginMode ? (\r\n         <>\r\n           <div className=\"d-grid gap-2\">\r\n             <BootstrapButton\r\n               className=\"align\"\r\n               variant=\"light\"\r\n               onClick={props.handleGoogle}\r\n             >\r\n               <i className=\"fa-brands fa-google\"></i> Sign with Google\r\n             </BootstrapButton>\r\n           </div>\r\n           <p className=\"text-center mt-2\" style={{ color: \"cornsilk\" }}>\r\n             Forgot{\" \"}\r\n             <Link to=\"/forgetpassword\">\r\n               <span className=\"pass\" style={{ color: \"#FED550\" }}>\r\n                 password?\r\n               </span>\r\n             </Link>\r\n           </p>\r\n         </>\r\n       ) : null}\r\n     </div>\r\n   </form>\r\n );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport \"./Auth.css\";\r\nimport \"../../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { signInWithGooglePopup } from \"../../../utils/firebase\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useForm } from \"../../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../../components/UIElements/LoadingSpinner\";\r\nimport Form from \"./Form\";\r\n\r\nconst Auth = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [loginMode, setLoginMode] = useState(true);\r\n  const [err, setErr] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n      {\r\n        email: {\r\n          value: \"\",\r\n          isValid: false,\r\n        },\r\n        password: {\r\n          value: \"\",\r\n          isValid: false,\r\n        },\r\n      },\r\n      false\r\n  );\r\n  \r\n  let inputs = [];\r\n  if (loginMode) {\r\n    inputs = props.login;\r\n  } else {\r\n    inputs = props.signup;\r\n  }\r\n\r\n  const handleAuth = async (url, body, errText) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        url,\r\n        \"POST\",\r\n        JSON.stringify(body),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        }\r\n      );\r\n      auth.login(responseData.userId, responseData.token);\r\n      navigate(\"/\", { replace: true });\r\n    } catch (err) {\r\n      setErr(errText);\r\n    }\r\n  };\r\n\r\n  const handleGoogle = async () => {\r\n    const response = await signInWithGooglePopup();\r\n    handleAuth(\r\n      `${process.env.REACT_APP_BACKEND_URL}/users/googleLogin`,\r\n      {\r\n        email: response.user.email,\r\n        name: response.user.displayName,\r\n      },\r\n      \"Cant login, please try again\"\r\n    );\r\n  }\r\n  \r\n  const switchModeHandler = () => {\r\n    if (!loginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          phone: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    }\r\n    else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          phone: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setLoginMode((prevMode) => !prevMode);\r\n    setErr(\"\");\r\n  };\r\n\r\n\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n      try {\r\n        const formData = {};\r\n        Object.keys(formState.inputs).forEach((key) => {\r\n          if (formState.inputs[key] !== undefined) {\r\n           formData[key] = formState.inputs[key].value;\r\n          }\r\n        });\r\n        handleAuth(\r\n            `${process.env.REACT_APP_BACKEND_URL}/users/${loginMode ? \"login\" : \"signup\"}`,\r\n            formData,\r\n            `Cant ${loginMode ? \"login\" : \"signup\"}, please try again`\r\n        );\r\n      } catch (err) {\r\n        setErr(`Cant ${loginMode ? \"login\" : \"signup\"}, please try again`);\r\n    }\r\n    \r\n  } \r\n\r\n    return (\r\n      <>\r\n        <div className=\"AuthFormContainer\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <Form\r\n            loginMode={loginMode}\r\n            authSubmitHandler={authSubmitHandler}\r\n            switchModeHandler={switchModeHandler}\r\n            inputs={inputs}\r\n            inputHandler={inputHandler}\r\n            err={err}\r\n            isValid={formState.isValid}\r\n            handleGoogle={handleGoogle}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } \r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport Auth from '../features/Authentication/Auth/index';\r\n\r\nexport default function Login() {\r\n return (\r\n   <Auth\r\n     login={[\"email\", \"password\"]}\r\n     signup={[\"email\", \"password\", \"name\", \"phone\"]}\r\n   />\r\n );\r\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["inputReducer","state","action","type","value","val","isValid","validate","validators","isTouched","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","href","size","inverse","danger","children","to","exact","onClick","disabled","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","setCustomParameters","prompt","auth","getAuth","signInWithGooglePopup","signInWithPopup","Form","onSubmit","authSubmitHandler","loginMode","style","color","switchModeHandler","fontSize","map","input","Input","inputHandler","VALIDATOR_REQUIRE","err","Button","variant","handleGoogle","useContext","AuthContext","useHttpClient","isLoading","sendRequest","useState","setLoginMode","setErr","navigate","useNavigate","email","password","setFormData","login","signup","handleAuth","url","body","errText","JSON","stringify","responseData","userId","token","replace","response","process","user","name","displayName","preventDefault","formData","Object","keys","forEach","key","undefined","LoadingSpinner","asOverlay","phone","prevMode","Login","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validator","trim","length","test"],"sourceRoot":""}